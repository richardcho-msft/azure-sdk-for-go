//go:build go1.18
// +build go1.18

// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.0, generator: @autorest/go@4.0.0-preview.43)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package generated

type AcsEventType string

const (
	AcsEventTypeAddParticipantsFailed AcsEventType = "addParticipantsFailed"
	AcsEventTypeAddParticipantsSucceeded AcsEventType = "addParticipantsSucceeded"
	AcsEventTypeCallConnected AcsEventType = "callConnected"
	AcsEventTypeCallDisconnected AcsEventType = "callDisconnected"
	AcsEventTypeCallTransferAccepted AcsEventType = "callTransferAccepted"
	AcsEventTypeCallTransferFailed AcsEventType = "callTransferFailed"
	AcsEventTypeParticipantsUpdated AcsEventType = "participantsUpdated"
	AcsEventTypeUnknown AcsEventType = "unknown"
)

// PossibleAcsEventTypeValues returns the possible values for the AcsEventType const type.
func PossibleAcsEventTypeValues() []AcsEventType {
	return []AcsEventType{	
		AcsEventTypeAddParticipantsFailed,
		AcsEventTypeAddParticipantsSucceeded,
		AcsEventTypeCallConnected,
		AcsEventTypeCallDisconnected,
		AcsEventTypeCallTransferAccepted,
		AcsEventTypeCallTransferFailed,
		AcsEventTypeParticipantsUpdated,
		AcsEventTypeUnknown,
	}
}

// CallConnectionStateModel - The state of the call connection.
type CallConnectionStateModel string

const (
	CallConnectionStateModelConnected CallConnectionStateModel = "connected"
	CallConnectionStateModelConnecting CallConnectionStateModel = "connecting"
	CallConnectionStateModelDisconnected CallConnectionStateModel = "disconnected"
	CallConnectionStateModelDisconnecting CallConnectionStateModel = "disconnecting"
	CallConnectionStateModelTransferAccepted CallConnectionStateModel = "transferAccepted"
	CallConnectionStateModelTransferring CallConnectionStateModel = "transferring"
	CallConnectionStateModelUnknown CallConnectionStateModel = "unknown"
)

// PossibleCallConnectionStateModelValues returns the possible values for the CallConnectionStateModel const type.
func PossibleCallConnectionStateModelValues() []CallConnectionStateModel {
	return []CallConnectionStateModel{	
		CallConnectionStateModelConnected,
		CallConnectionStateModelConnecting,
		CallConnectionStateModelDisconnected,
		CallConnectionStateModelDisconnecting,
		CallConnectionStateModelTransferAccepted,
		CallConnectionStateModelTransferring,
		CallConnectionStateModelUnknown,
	}
}

// CallLocatorKind - The call locator kind.
type CallLocatorKind string

const (
	CallLocatorKindGroupCallLocator CallLocatorKind = "groupCallLocator"
	CallLocatorKindServerCallLocator CallLocatorKind = "serverCallLocator"
)

// PossibleCallLocatorKindValues returns the possible values for the CallLocatorKind const type.
func PossibleCallLocatorKindValues() []CallLocatorKind {
	return []CallLocatorKind{	
		CallLocatorKindGroupCallLocator,
		CallLocatorKindServerCallLocator,
	}
}

// CallRejectReason - The rejection reason.
type CallRejectReason string

const (
	CallRejectReasonBusy CallRejectReason = "busy"
	CallRejectReasonForbidden CallRejectReason = "forbidden"
	CallRejectReasonNone CallRejectReason = "none"
)

// PossibleCallRejectReasonValues returns the possible values for the CallRejectReason const type.
func PossibleCallRejectReasonValues() []CallRejectReason {
	return []CallRejectReason{	
		CallRejectReasonBusy,
		CallRejectReasonForbidden,
		CallRejectReasonNone,
	}
}

type CommunicationCloudEnvironmentModel string

const (
	CommunicationCloudEnvironmentModelDod CommunicationCloudEnvironmentModel = "dod"
	CommunicationCloudEnvironmentModelGcch CommunicationCloudEnvironmentModel = "gcch"
	CommunicationCloudEnvironmentModelPublic CommunicationCloudEnvironmentModel = "public"
)

// PossibleCommunicationCloudEnvironmentModelValues returns the possible values for the CommunicationCloudEnvironmentModel const type.
func PossibleCommunicationCloudEnvironmentModelValues() []CommunicationCloudEnvironmentModel {
	return []CommunicationCloudEnvironmentModel{	
		CommunicationCloudEnvironmentModelDod,
		CommunicationCloudEnvironmentModelGcch,
		CommunicationCloudEnvironmentModelPublic,
	}
}

// CommunicationIdentifierModelKind - Type of CommunicationIdentifierModel.
type CommunicationIdentifierModelKind string

const (
	CommunicationIdentifierModelKindCommunicationUser CommunicationIdentifierModelKind = "communicationUser"
	CommunicationIdentifierModelKindMicrosoftTeamsUser CommunicationIdentifierModelKind = "microsoftTeamsUser"
	CommunicationIdentifierModelKindPhoneNumber CommunicationIdentifierModelKind = "phoneNumber"
	CommunicationIdentifierModelKindUnknown CommunicationIdentifierModelKind = "unknown"
)

// PossibleCommunicationIdentifierModelKindValues returns the possible values for the CommunicationIdentifierModelKind const type.
func PossibleCommunicationIdentifierModelKindValues() []CommunicationIdentifierModelKind {
	return []CommunicationIdentifierModelKind{	
		CommunicationIdentifierModelKindCommunicationUser,
		CommunicationIdentifierModelKindMicrosoftTeamsUser,
		CommunicationIdentifierModelKindPhoneNumber,
		CommunicationIdentifierModelKindUnknown,
	}
}

// PlaySourceType - Defines the type of the play source
type PlaySourceType string

const (
	PlaySourceTypeFile PlaySourceType = "file"
)

// PossiblePlaySourceTypeValues returns the possible values for the PlaySourceType const type.
func PossiblePlaySourceTypeValues() []PlaySourceType {
	return []PlaySourceType{	
		PlaySourceTypeFile,
	}
}

// RecordingChannelType - The channel type of call recording.
type RecordingChannelType string

const (
	RecordingChannelTypeMixed RecordingChannelType = "mixed"
	RecordingChannelTypeUnmixed RecordingChannelType = "unmixed"
)

// PossibleRecordingChannelTypeValues returns the possible values for the RecordingChannelType const type.
func PossibleRecordingChannelTypeValues() []RecordingChannelType {
	return []RecordingChannelType{	
		RecordingChannelTypeMixed,
		RecordingChannelTypeUnmixed,
	}
}

// RecordingContentType - The content type of call recording.
type RecordingContentType string

const (
	RecordingContentTypeAudio RecordingContentType = "audio"
	RecordingContentTypeAudioVideo RecordingContentType = "audioVideo"
)

// PossibleRecordingContentTypeValues returns the possible values for the RecordingContentType const type.
func PossibleRecordingContentTypeValues() []RecordingContentType {
	return []RecordingContentType{	
		RecordingContentTypeAudio,
		RecordingContentTypeAudioVideo,
	}
}

// RecordingFormatType - The format type of call recording.
type RecordingFormatType string

const (
	RecordingFormatTypeMp3 RecordingFormatType = "mp3"
	RecordingFormatTypeMp4 RecordingFormatType = "mp4"
	RecordingFormatTypeWav RecordingFormatType = "wav"
)

// PossibleRecordingFormatTypeValues returns the possible values for the RecordingFormatType const type.
func PossibleRecordingFormatTypeValues() []RecordingFormatType {
	return []RecordingFormatType{	
		RecordingFormatTypeMp3,
		RecordingFormatTypeMp4,
		RecordingFormatTypeWav,
	}
}

type RecordingStatus string

const (
	RecordingStatusActive RecordingStatus = "active"
	RecordingStatusInactive RecordingStatus = "inactive"
)

// PossibleRecordingStatusValues returns the possible values for the RecordingStatus const type.
func PossibleRecordingStatusValues() []RecordingStatus {
	return []RecordingStatus{	
		RecordingStatusActive,
		RecordingStatusInactive,
	}
}

